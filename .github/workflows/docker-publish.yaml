name: Publish Docker images

on:
  push:
    branches: [ "master" ]
    # Trigger on master branch only if changes are detected in the docker directory
    paths:
      - docker/**
  workflow_dispatch:

jobs:
  publish-image:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      matrix:
        dockerfile: [docker/Dockerfile, docker/Dockerfile-alpine]
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.7.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      # Set up QEMU to enable multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to Github Container Registry (GHCR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Caddy version
        id: version-extractor
        run: |
          CADDY_VERSION=$(grep -oP '(\d+\.\d+\.\d+(-\w+(-\w+)*)?)' ${{ matrix.dockerfile }} | grep -vP 'builder' | head -n 1)
          echo "Extracted Caddy version is: $CADDY_VERSION"
          echo "CADDY_VERSION=$CADDY_VERSION" >> "$GITHUB_OUTPUT"

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/caddy-with-namedotcom
            ghcr.io/${{ github.repository_owner }}/caddy-with-namedotcom            
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version-extractor.outputs.CADDY_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version-extractor.outputs.CADDY_VERSION }}
            type=semver,pattern={{major}},value=${{ steps.version-extractor.outputs.CADDY_VERSION }} 
          # Set the OCI Image Specification source label to the Caddy repository to enable tools 
          # like Renovate and Dependabot to automatically fetch release notes for new versions.
          labels: |
            org.opencontainers.image.source=https://github.com/caddyserver/caddy

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Check if this job builds the default version
        id: check-default-build
        run: |
          IS_DEFAULT_BUILD=$(echo '${{ steps.version-extractor.outputs.CADDY_VERSION }}' | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+$' && echo true || echo false)
          echo "Is default version build job: $IS_DEFAULT_BUILD"
          echo "IS_DEFAULT_BUILD=$IS_DEFAULT_BUILD" >> "$GITHUB_OUTPUT"

      - uses: softprops/action-gh-release@v2.2.1
        if: ${{ steps.check-default-build.outputs.IS_DEFAULT_BUILD == 'true' }}
        with:
          tag_name: ${{ steps.version-extractor.outputs.CADDY_VERSION }}
          body: |
            Update Caddy base image version to ${{ steps.version-extractor.outputs.CADDY_VERSION }}
          generate_release_notes: true
          make_latest: true